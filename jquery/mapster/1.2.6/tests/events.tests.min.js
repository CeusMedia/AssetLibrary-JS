/*global Test: true, iqtest, image, map_options, areas */
this.tests=this.tests||[];this.tests.push(iqtest.create("events","tests for imagemapster events").add("Mouse Events",function(b,e){var c,g=[],d=image.mapster(map_options);
function f(i,a){var h={};h[i]=function(j){j.this_context=this;a(j);};d.mapster("set_options",h);
}for(c=0;c<=4;c++){g[c]=this.defer();}f("onMouseover",g[0].resolve);areas.find('area[state="NV"]').first().mouseover();
g[0].then(function(a){b.truthy(a,"Mouseover fired for Nevada");b.equals(a.selected,false,"Selected state returned correctly");
b.equals(a.key,"NV","Key returned correctly");f("onMouseover",g[1].resolve);areas.find('area[state="AK"]').first().mouseover();
});g[1].then(function(a){b.truthy(a,"Mouseover fired for Alaska");b.equals(a.selected,true,"Selected state returned correctly");
b.equals(a.key,"AK","Key returned correctly");f("onMouseout",g[2].resolve);areas.find('area[state="AK"]').first().mouseout();
});g[2].then(function(a){b.truthy(a,"Mouseout fired for Nevada");b.equals("AK",a.key,"Correct key returned by mouseout");
b.equals(a.selected,true,"Selected state returned correctly");f("onClick",g[3].resolve);
areas.find('area[state="GA"]').first().click();});g[3].then(function(a){b.equals(a.key,"GA","Click callback fired for Georgia, and key was correct");
b.equals(a.selected,true,"Click callback fired for Georgia, and selected was correct");
b.equals(a.this_context,areas.find('area[state="GA"]')[0],"Click callback fired for Georgia, and 'this' was correct");
f("onClick",g[4].resolve);areas.find('area[state="OR"]').first().click();});g[4].then(function(a){b.equals(a.key,"OR","Click callback fired for Oregon, and key was correct");
b.equals(a.selected,false,"Click callback fired for Oregon, and selected was correct");
});}));